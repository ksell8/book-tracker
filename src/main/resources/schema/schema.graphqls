scalar Year
scalar ISBN

type Query {
    bookById(id: ID): Book
    bookByName(name: String!): Book
    books(pageNumber: Int, pageSize: Int): PageBook
}

type Mutation{
    addBook(bookInput: BookInput): Book
    deleteById(id: ID): Boolean
}

type Book {
    id: ID
    name: String!
    author: String!
    status: Status!
    publisher: String
    publishedYear: Year
    genre: Genre
    hardcover: Boolean
    pages: Int
    isbn: ISBN
}

input BookInput{
    name: String!
    author: String!
    status: Status!
    publisher: String
    publishedYear: Year
    genre: Genre
    hardcover: Boolean
    pages: Int
    isbn: ISBN
}

enum Status {
  READ
  READING
  TO_READ
  NOT_INTERESTED
  REFERENCE
}

enum Genre{
    POETRY
    PHILOSOPHY
    MEMOIR
    NONFICTION
    SCI_FI
    HORROR
    FICTION
}

type PageBook {
    content: [Book]
    totalPages: Int
    totalElements: Int
    size: Int
    number: Int
    numberOfElements: Int
    hasNext: Boolean
    hasPrevious: Boolean
}